USE master;
IF EXISTS(select * from sys.databases where name='uczelnia')
ALTER DATABASE uczelnia SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
DROP DATABASE if exists uczelnia
go
CREATE DATABASE uczelnia collate polish_ci_as
go
USE uczelnia
go

/*instrukcje tworzace baze danych dla uczelni BEZ DANYCH
skladnia T-SQL
*/

create table oceny (
ocena decimal(3,1) primary key);

create table grupy (
nr_grupy char(10) primary key);

create table stopnie_tytuly (
stopien_tytul varchar(25) primary key,
stawka smallmoney not null);

create table pracownicy (
id_pracownika int identity primary key,
nazwisko varchar(30) not null,
imie varchar(25),
data_zatrudnienia date,
PESEL char(11));

create table wykladowcy (
id_wykladowcy int primary key,
stopien_tytul varchar(25) not null,
katedra varchar(100)
);
alter table wykladowcy add constraint rpw foreign key (id_wykladowcy) references pracownicy (id_pracownika) on delete cascade;
alter table wykladowcy add constraint rwst foreign key (stopien_tytul) references stopnie_tytuly on delete no action on update cascade;

create table studenci (
id_studenta int identity primary key,
nazwisko varchar(30) not null,
imie varchar(25),
data_urodzenia date check(data_urodzenia<=dateAdd(year,-18,getdate())),
nr_grupy char(10) not null
);
alter table studenci add constraint rsg foreign key (nr_grupy) references grupy on delete no action on update cascade;

create table wyklady (
id_wykladu int identity primary key,
nazwa_wykladu varchar(50) not null,
liczba_godzin tinyint check(liczba_godzin<=60),
id_wykladowcy int,
foreign key (id_wykladowcy) references wykladowcy on delete no action on update cascade
);

create table studenci_wyklady (
id_studenta int,
id_wykladu int,
primary key (id_studenta, id_wykladu),
foreign key (id_wykladu) references wyklady on delete no action,
foreign key (id_studenta) references studenci on delete cascade
);

create table oceny_studentow (
id_studenta int,
id_wykladu int,
data_egzaminu date default getdate() check(data_egzaminu<=getdate()),
ocena decimal(3,1) not null,
primary key (id_studenta, id_wykladu, data_egzaminu),
foreign key (id_studenta, id_wykladu) references studenci_wyklady 
on delete no action on update cascade,
foreign key (ocena) references oceny on delete no action on update no action
);


insert into grupy (nr_grupy) values ('DMIe1001')
insert into grupy (nr_grupy) values ('DMZm1003')
insert into grupy values ('ZMZm2001')


insert into stopnie_tytuly values ('doktor',45),
('doktor habilitowany',55),('profesor nadzwyczajny',60),('profesor zwyczajny',65)

insert into oceny values (2),(3),(3.5),(4),(4.5),(5)

insert into pracownicy values('Halemba','Iwona','20140521','11111111111'),('Nowak','Jacek','20100324','11111111112'),('Janikowski','Ireneusz','20161014','11111111113')

insert into wykladowcy values(1,'doktor','Katedra Matematyki')
insert into wykladowcy values(2,'profesor nadzwyczajny','Katedra Informatyki')
insert into wykladowcy values(3,'doktor','Katedra Historii')

insert into pracownicy values('Malinowski','Jacek','20110726','11111111114')


insert into studenci values('Iwanicki','Maciej','20001027','DMIe1001')
insert into studenci values('Nowakowski','Kamil','19980220','DMZm1003')
insert into studenci values('Michalak','Małgorzata','19970722','DMZm1003')

insert into wyklady values('Informatyka',30,2)
insert into wyklady values('Statystyka',15,1)
insert into wyklady values('Historia',30,3)

insert into studenci_wyklady values(4,1)
insert into studenci_wyklady values(3,2)
insert into studenci_wyklady values(4,2)